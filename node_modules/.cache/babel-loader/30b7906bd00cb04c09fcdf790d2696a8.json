{"ast":null,"code":"\"use strict\";\n\nvar querystring = require(\"querystring\");\n\nvar WebHelper = require(\"./webhelper.js\");\n\nconst _accessToken = new WeakMap();\n\nconst _apiKey = new WeakMap();\n\nconst _apiSecret = new WeakMap();\n\nconst _username = new WeakMap();\n\nconst _password = new WeakMap();\n\nconst _refreshToken = new WeakMap();\n\nconst _hostName = new WeakMap();\n\nclass Credentials {\n  constructor(apiKey, apiSecret, username, password, refreshToken, hostName) {\n    this.apiKey = apiKey;\n    this.apiSecret = apiSecret;\n    this.username = username;\n    this.password = password;\n    this.refreshToken = refreshToken;\n    this.hostName = hostName;\n  }\n\n  get apiKey() {\n    return _apiKey.get(this);\n  }\n\n  set apiKey(value) {\n    _apiKey.set(this, value);\n  }\n\n  get accessToken() {\n    return _accessToken.get(this);\n  }\n\n  set accessToken(value) {\n    _accessToken.set(this, value);\n  }\n\n  get apiSecret() {\n    return _apiSecret.get(this);\n  }\n\n  set apiSecret(value) {\n    _apiSecret.set(this, value);\n  }\n\n  get password() {\n    return _password.get(this);\n  }\n\n  set password(value) {\n    _password.set(this, value);\n  }\n\n  get username() {\n    return _username.get(this);\n  }\n\n  set username(value) {\n    _username.set(this, value);\n  }\n\n  get refreshToken() {\n    return _refreshToken.get(this);\n  }\n\n  set refreshToken(value) {\n    _refreshToken.set(this, value);\n  }\n\n  get hostName() {\n    return _hostName.get(this);\n  }\n\n  set hostName(value) {\n    _hostName.set(this, value);\n  }\n\n  async getAccessToken() {\n    var apiKey = this.apiKey;\n    var apiSecret = this.apiSecret;\n    var username = this.username;\n    var password = this.password;\n    var accessToken = this.accessToken;\n    var hostName = this.hostName;\n\n    if (!this.shouldRefreshToken()) {\n      return accessToken;\n    }\n\n    var params = {\n      client_id: apiKey,\n      client_secret: apiSecret,\n      grant_type: \"client_credentials\"\n    };\n\n    if (username && password) {\n      params.username = username;\n      params.password = password;\n      params.grant_type = \"password\";\n    }\n\n    var postData = querystring.stringify(params);\n    var path = \"/oauth2/token\";\n    var self = this;\n\n    try {\n      var webHelper = new WebHelper(self, hostName);\n      var response = await webHelper.postForm(path, postData);\n      var expireTime = new Date();\n      expireTime.setSeconds(expireTime.getSeconds() + Number(response.expires_in));\n      response.expiration = expireTime;\n      self.accessToken = response;\n      return self.accessToken;\n    } catch (err) {\n      return null;\n    }\n  }\n\n  async refreshAccessToken() {\n    var apiKey = this.apiKey;\n    var apiSecret = this.apiSecret;\n    var refreshToken = this.refreshToken;\n    var hostName = this.hostName;\n    var params = {\n      client_id: apiKey,\n      client_secret: apiSecret,\n      refresh_token: refreshToken,\n      grant_type: \"refresh_token\"\n    };\n    var postData = querystring.stringify(params);\n    var path = \"/oauth2/token\";\n    var self = this;\n\n    try {\n      var webHelper = new WebHelper(self, hostName);\n      var response = await webHelper.postForm(path, postData);\n      var expireTime = new Date();\n      expireTime.setSeconds(expireTime.getSeconds() + Number(response.expires_in));\n      response.expiration = expireTime;\n      self.accessToken = response;\n      return self.accessToken;\n    } catch (err) {\n      return null;\n    }\n  }\n\n  shouldRefreshToken() {\n    var accessToken = this.accessToken;\n\n    if (accessToken && accessToken.expiration) {\n      return new Date(Date.now() - 5000) > accessToken.expiration;\n    } else {\n      return true;\n    }\n  }\n\n}\n\nmodule.exports = Credentials;","map":{"version":3,"names":["querystring","require","WebHelper","_accessToken","WeakMap","_apiKey","_apiSecret","_username","_password","_refreshToken","_hostName","Credentials","constructor","apiKey","apiSecret","username","password","refreshToken","hostName","get","value","set","accessToken","getAccessToken","shouldRefreshToken","params","client_id","client_secret","grant_type","postData","stringify","path","self","webHelper","response","postForm","expireTime","Date","setSeconds","getSeconds","Number","expires_in","expiration","err","refreshAccessToken","refresh_token","now","module","exports"],"sources":["D:/Getty-Search-Media-Results/node_modules/@vineetshekhawat/gettyimages-api/lib/credentials.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar querystring = require(\"querystring\");\r\nvar WebHelper = require(\"./webhelper.js\");\r\n\r\nconst _accessToken = new WeakMap();\r\nconst _apiKey = new WeakMap();\r\nconst _apiSecret = new WeakMap();\r\nconst _username = new WeakMap();\r\nconst _password = new WeakMap();\r\nconst _refreshToken = new WeakMap();\r\nconst _hostName = new WeakMap();\r\n\r\nclass Credentials {\r\n    constructor(apiKey, apiSecret, username, password, refreshToken, hostName) {\r\n        this.apiKey = apiKey;\r\n        this.apiSecret = apiSecret;\r\n        this.username = username;\r\n        this.password = password;\r\n        this.refreshToken = refreshToken;\r\n        this.hostName = hostName;\r\n    }\r\n    \r\n    get apiKey() {\r\n        return _apiKey.get(this);\r\n    }\r\n    set apiKey(value) {\r\n        _apiKey.set(this,value);\r\n    }\r\n    \r\n    get accessToken() {\r\n        return _accessToken.get(this);\r\n    }    \r\n    set accessToken(value) {\r\n        _accessToken.set(this,value);\r\n    }\r\n\r\n    get apiSecret() {\r\n        return _apiSecret.get(this);\r\n    }\r\n    set apiSecret(value) {\r\n        _apiSecret.set(this,value);\r\n    }\r\n    \r\n    get password() {\r\n        return _password.get(this);\r\n    }\r\n    set password(value) {\r\n        _password.set(this,value);\r\n    }\r\n\r\n    get username() {\r\n        return _username.get(this);\r\n    }\r\n    \r\n    set username(value) {\r\n        _username.set(this,value);\r\n    }\r\n\r\n    get refreshToken() {\r\n        return _refreshToken.get(this);\r\n    }\r\n    set refreshToken(value) {\r\n        _refreshToken.set(this,value);\r\n    }\r\n    \r\n    get hostName() {\r\n        return _hostName.get(this);\r\n    }\r\n    set hostName(value) {\r\n        _hostName.set(this,value);\r\n    }\r\n    \r\n    async getAccessToken() {\r\n        var apiKey = this.apiKey;\r\n        var apiSecret = this.apiSecret;\r\n        var username = this.username;\r\n        var password = this.password;\r\n        var accessToken = this.accessToken;\r\n        var hostName = this.hostName;\r\n        \r\n        \r\n        if (!this.shouldRefreshToken()) {\r\n            return accessToken;\r\n        }\r\n\r\n        var params = {\r\n            client_id: apiKey,\r\n            client_secret: apiSecret,\r\n            grant_type: \"client_credentials\"\r\n        };\r\n\r\n        if (username && password) {\r\n            params.username = username;\r\n            params.password = password;\r\n            params.grant_type = \"password\";\r\n        }\r\n\r\n        var postData = querystring.stringify(params);\r\n        var path = \"/oauth2/token\";\r\n\r\n        var self = this;\r\n        \r\n        try {\r\n            var webHelper = new WebHelper(self, hostName);\r\n            var response = await webHelper.postForm(path, postData);\r\n            var expireTime = new Date();\r\n            expireTime.setSeconds(expireTime.getSeconds() + Number(response.expires_in));\r\n            response.expiration = expireTime;\r\n            self.accessToken = response;\r\n            \r\n            return self.accessToken;\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    async refreshAccessToken() {\r\n        var apiKey = this.apiKey;\r\n        var apiSecret = this.apiSecret;\r\n        var refreshToken = this.refreshToken;\r\n        var hostName = this.hostName;\r\n        \r\n        var params = {\r\n            client_id: apiKey,\r\n            client_secret: apiSecret,\r\n            refresh_token: refreshToken,\r\n            grant_type: \"refresh_token\"\r\n        };\r\n\r\n        var postData = querystring.stringify(params);\r\n        var path = \"/oauth2/token\";\r\n\r\n        var self = this;\r\n\r\n        try {\r\n            var webHelper = new WebHelper(self, hostName);\r\n            var response = await webHelper.postForm(path, postData);\r\n            var expireTime = new Date();\r\n            expireTime.setSeconds(expireTime.getSeconds() + Number(response.expires_in));\r\n            response.expiration = expireTime;\r\n            self.accessToken = response;\r\n            \r\n            return self.accessToken;\r\n        } catch (err) {\r\n            return null;\r\n        }\r\n    }\r\n        \r\n\r\n\r\n    shouldRefreshToken() {\r\n        var accessToken = this.accessToken;\r\n        \r\n        if (accessToken && accessToken.expiration) {\r\n            return new Date(Date.now() - 5000) > accessToken.expiration;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Credentials;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}