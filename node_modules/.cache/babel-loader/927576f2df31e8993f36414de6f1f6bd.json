{"ast":null,"code":"//     wink-helpers\n//     Functions for cross validation, shuffle, cartesian product and more\n//\n//     Copyright (C) 2017-18  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-helpers”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n//\nvar helpers = Object.create(null); // ### Private Functions\n// #### Product Reducer (Callback)\n// Callback function used by `reduce` inside the `product()` function.\n// Follows the standard guidelines of `reduce()` callback function.\n\nvar productReducer = function productReducer(prev, curr) {\n  var c,\n      cmax = curr.length;\n  var p,\n      pmax = prev.length;\n  var result = [];\n\n  for (p = 0; p < pmax; p += 1) {\n    for (c = 0; c < cmax; c += 1) {\n      result.push(prev[p].concat(curr[c]));\n    }\n  }\n\n  return result;\n}; // productReducer()\n// ### Public Function\n// ### Array Helpers\n\n\nhelpers.array = Object.create(null); // #### is Array\n// Tests if argument `v` is a JS array; returns `true` if it is, otherwise returns `false`.\n\nhelpers.array.isArray = function (v) {\n  return v !== undefined && v !== null && Object.prototype.toString.call(v) === '[object Array]';\n}; // isArray()\n// #### sorting helpers\n// Set of helpers to sort either numbers or strings. For key/value pairs,\n// the format for each element must be `[ key, value ]`.\n// Sort helper to sort an array in ascending order.\n\n\nhelpers.array.ascending = function (a, b) {\n  return a > b ? 1 : a === b ? 0 : -1;\n}; // ascending()\n// Sort helper to sort an array in descending order.\n\n\nhelpers.array.descending = function (a, b) {\n  return b > a ? 1 : b === a ? 0 : -1;\n}; // descending()\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **key**.\n\n\nhelpers.array.ascendingOnKey = function (a, b) {\n  return a[0] > b[0] ? 1 : a[0] === b[0] ? 0 : -1;\n}; // ascendingOnKey()\n// Sort helper to sort an array of `[ key, value ]` in descending order by **key**.\n\n\nhelpers.array.descendingOnKey = function (a, b) {\n  return b[0] > a[0] ? 1 : b[0] === a[0] ? 0 : -1;\n}; // descendingOnKey()\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **value**.\n\n\nhelpers.array.ascendingOnValue = function (a, b) {\n  return a[1] > b[1] ? 1 : a[1] === b[1] ? 0 : -1;\n}; // ascendingOnValue()\n// Sort helper to sort an array of `[ key, value ]` in descending order by **value**.\n\n\nhelpers.array.descendingOnValue = function (a, b) {\n  return b[1] > a[1] ? 1 : b[1] === a[1] ? 0 : -1;\n}; // descendingOnValue()\n// The following two functions generate a suitable function for sorting on a single\n// key or on a composite keys (max 2 only). Just a remider, the generated function\n// does not sort on two keys; instead it will sort on a key composed of the two\n// accessors.\n// Sorts in ascending order on `accessor1` & `accessor2` (optional).\n\n\nhelpers.array.ascendingOn = function (accessor1, accessor2) {\n  if (accessor2) {\n    return function (a, b) {\n      return a[accessor1][accessor2] > b[accessor1][accessor2] ? 1 : a[accessor1][accessor2] === b[accessor1][accessor2] ? 0 : -1;\n    };\n  }\n\n  return function (a, b) {\n    return a[accessor1] > b[accessor1] ? 1 : a[accessor1] === b[accessor1] ? 0 : -1;\n  };\n}; // ascendingOn()\n// Sorts in descending order on `accessor1` & `accessor2` (optional).\n\n\nhelpers.array.descendingOn = function (accessor1, accessor2) {\n  if (accessor2) {\n    return function (a, b) {\n      return b[accessor1][accessor2] > a[accessor1][accessor2] ? 1 : b[accessor1][accessor2] === a[accessor1][accessor2] ? 0 : -1;\n    };\n  }\n\n  return function (a, b) {\n    return b[accessor1] > a[accessor1] ? 1 : b[accessor1] === a[accessor1] ? 0 : -1;\n  };\n}; // descendingOn()\n// #### pluck\n// Plucks specified element from each element of an **array of array**, and\n// returns the resultant array. The element is specified by `i` (default `0`) and\n// number of elements to pluck are defined by `limit` (default `a.length`).\n\n\nhelpers.array.pluck = function (a, key, limit) {\n  var k, plucked;\n  k = a.length;\n  var i = key || 0;\n  var lim = limit || k;\n  if (lim > k) lim = k;\n  plucked = new Array(lim);\n\n  for (k = 0; k < lim; k += 1) {\n    plucked[k] = a[k][i];\n  }\n\n  return plucked;\n}; // pluck()\n// #### product\n// Finds the Cartesian Product of arrays present inside the array `a`. Therefore\n// the array `a` must be an array of 1-dimensional arrays. For example,\n// `product( [ [ 9, 8 ], [ 1, 2 ] ] )`\n// will produce `[ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]`.\n\n\nhelpers.array.product = function (a) {\n  return a.reduce(productReducer, [[]]);\n}; // #### shuffle\n// Randomly shuffles the elements of an array and returns the same.\n// Reference: Chapter on Random Numbers/Shuffling in Seminumerical algorithms.\n// The Art of Computer Programming Volume II by Donald E Kunth\n\n\nhelpers.array.shuffle = function (array) {\n  var a = array;\n  var balance = a.length;\n  var candidate;\n  var temp;\n\n  while (balance) {\n    candidate = Math.floor(Math.random() * balance);\n    balance -= 1;\n    temp = a[balance];\n    a[balance] = a[candidate];\n    a[candidate] = temp;\n  }\n\n  return a;\n}; // ### Object Helpers\n\n\nvar objectKeys = Object.keys;\nvar objectCreate = Object.create;\nhelpers.object = Object.create(null); // #### is Object\n// Tests if argument `v` is a JS object; returns `true` if it is, otherwise returns `false`.\n\nhelpers.object.isObject = function (v) {\n  return v && Object.prototype.toString.call(v) === '[object Object]' ? true : false; // eslint-disable-line no-unneeded-ternary\n}; // isObject()\n// #### keys\n// Returns keys of the `obj` in an array.\n\n\nhelpers.object.keys = function (obj) {\n  return objectKeys(obj);\n}; // keys()\n// #### size\n// Returns the number of keys of the `obj`.\n\n\nhelpers.object.size = function (obj) {\n  return objectKeys(obj).length;\n}; // size()\n// #### values\n// Returns all values from each key/value pair of the `obj` in an array.\n\n\nhelpers.object.values = function (obj) {\n  var keys = helpers.object.keys(obj);\n  var length = keys.length;\n  var values = new Array(length);\n\n  for (var i = 0; i < length; i += 1) {\n    values[i] = obj[keys[i]];\n  }\n\n  return values;\n}; // values()\n// #### value Freq\n// Returns the frequency of each unique value present in the `obj`, where the\n// **key** is the *value* and **value** is the *frequency*.\n\n\nhelpers.object.valueFreq = function (obj) {\n  var keys = helpers.object.keys(obj);\n  var length = keys.length;\n  var val;\n  var vf = objectCreate(null);\n\n  for (var i = 0; i < length; i += 1) {\n    val = obj[keys[i]];\n    vf[val] = 1 + (vf[val] || 0);\n  }\n\n  return vf;\n}; // valueFreq()\n// #### table\n// Converts the `obj` in to an array of `[ key, value ]` pairs in form of a table.\n// Second argument - `f` is optional and it is a function, which is called with\n// each `value`.\n\n\nhelpers.object.table = function (obj, f) {\n  var keys = helpers.object.keys(obj);\n  var length = keys.length;\n  var pairs = new Array(length);\n  var ak, av;\n\n  for (var i = 0; i < length; i += 1) {\n    ak = keys[i];\n    av = obj[ak];\n    if (typeof f === 'function') f(av);\n    pairs[i] = [ak, av];\n  }\n\n  return pairs;\n}; // table()\n// ### Validation Helpers\n\n\nhelpers.validate = Object.create(null); // Create aliases for isObject and isArray.\n\nhelpers.validate.isObject = helpers.object.isObject;\nhelpers.validate.isArray = helpers.array.isArray; // #### isFiniteInteger\n// Validates if `n` is a finite integer.\n\nhelpers.validate.isFiniteInteger = function (n) {\n  return typeof n === 'number' && !isNaN(n) && isFinite(n) && n === Math.round(n);\n}; // isFiniteInteger()\n// #### isFiniteNumber\n// Validates if `n` is a valid number.\n\n\nhelpers.validate.isFiniteNumber = function (n) {\n  return typeof n === 'number' && !isNaN(n) && isFinite(n);\n}; // isFiniteNumber()\n// ### cross validation\n\n/**\n *\n * Creates an instance of cross validator useful for machine learning tasks.\n *\n * @param {string[]} classLabels - array containing all the class labels.\n * @return {methods} object conatining set of API methods for tasks like evalutaion,\n * reset and metrics generation.\n*/\n\n\nhelpers.validate.cross = function (classLabels) {\n  // wink's const for unknown predictions!\n  var unknown = 'unknown'; // To ensure that metrics is not computed prior to evaluation.\n\n  var evaluated = false; // The confusion matrix.\n\n  var cm;\n  var precision;\n  var recall;\n  var fmeasure; // The class labels is assigned to this variable.\n\n  var labels; // The length of `labels` array.\n\n  var labelCount;\n  var labelsObj = Object.create(null); // Returned!\n\n  var methods = Object.create(null);\n  /**\n   *\n   * Resets the current instance for another round of evaluation; the class\n   * labels defined at instance creation time are not touched.\n   *\n   * @return {undefined} nothing!\n  */\n\n  var reset = function reset() {\n    evaluated = false;\n    cm = Object.create(null);\n    precision = Object.create(null);\n    recall = Object.create(null);\n    fmeasure = Object.create(null); // Initialize confusion matrix and metrics.\n\n    for (var i = 0; i < labelCount; i += 1) {\n      var row = labels[i];\n      labelsObj[row] = true;\n      cm[row] = Object.create(null);\n      precision[row] = 0;\n      recall[row] = 0;\n      fmeasure[row] = 0;\n\n      for (var j = 0; j < labelCount; j += 1) {\n        var col = labels[j];\n        cm[row][col] = 0;\n      }\n    }\n  }; // reset()\n\n  /**\n   *\n   * Creates an instance of cross validator useful for machine learning tasks.\n   *\n   * @param {string} truth - the actual class label.\n   * @param {string} guess - the predicted class label.\n   * @return {boolean} returns true if the evaluation is successful. The evaluation\n   * may fail if `truth` or `guess` is not in the array `classLabels` provided at\n   * instance creation time; or if guess is equal to `unknown`.\n  */\n\n\n  var evaluate = function evaluate(truth, guess) {\n    // If prediction failed then return false!\n    if (guess === unknown || !labelsObj[truth] || !labelsObj[guess]) return false; // Update confusion matrix.\n\n    if (guess === truth) {\n      cm[truth][guess] += 1;\n    } else {\n      cm[guess][truth] += 1;\n    }\n\n    evaluated = true;\n    return true;\n  }; // evaluate()\n\n  /**\n   *\n   * It computes a detailed metrics consisting of macro-averaged precision,\n   * recall and f-measure along with their label-wise values and the confusion\n   * matrix.\n   *\n   * @return {object} object containing macro-averaged `avgPrecision`, `avgRecall`,\n   * `avgFMeasure` values along with other details such as label-wise values\n   * and the confusion matrix. A value of `null` is returned if no evaluate()\n   * has been called before.\n  */\n\n\n  var metrics = function metrics() {\n    if (!evaluated) return null; // Numerators for every label; they are same for precision & recall both.\n\n    var n = Object.create(null); // Only denominators differs for precision & recall\n\n    var pd = Object.create(null);\n    var rd = Object.create(null); // `row` and `col` of confusion matrix.\n\n    var col, row;\n    var i, j; // Macro average values for metrics.\n\n    var avgPrecision = 0;\n    var avgRecall = 0;\n    var avgFMeasure = 0; // Compute label-wise numerators & denominators!\n\n    for (i = 0; i < labelCount; i += 1) {\n      row = labels[i];\n\n      for (j = 0; j < labelCount; j += 1) {\n        col = labels[j];\n\n        if (row === col) {\n          n[row] = cm[row][col];\n        }\n\n        pd[row] = cm[row][col] + (pd[row] || 0);\n        rd[row] = cm[col][row] + (rd[row] || 0);\n      }\n    } // Ready to compute metrics.\n\n\n    for (i = 0; i < labelCount; i += 1) {\n      row = labels[i];\n      precision[row] = +(n[row] / pd[row]).toFixed(4); // NaN can occur if a label has not been encountered.\n\n      if (isNaN(precision[row])) precision[row] = 0;\n      recall[row] = +(n[row] / rd[row]).toFixed(4);\n      if (isNaN(recall[row])) recall[row] = 0;\n      fmeasure[row] = +(2 * precision[row] * recall[row] / (precision[row] + recall[row])).toFixed(4);\n      if (isNaN(fmeasure[row])) fmeasure[row] = 0;\n    } // Compute thier averages, note they will be macro avegages.\n\n\n    for (i = 0; i < labelCount; i += 1) {\n      avgPrecision += precision[labels[i]] / labelCount;\n      avgRecall += recall[labels[i]] / labelCount;\n      avgFMeasure += fmeasure[labels[i]] / labelCount;\n    } // Return metrics.\n\n\n    return {\n      // Macro-averaged metrics.\n      avgPrecision: +avgPrecision.toFixed(4),\n      avgRecall: +avgRecall.toFixed(4),\n      avgFMeasure: +avgFMeasure.toFixed(4),\n      details: {\n        // Confusion Matrix.\n        confusionMatrix: cm,\n        // Label wise metrics details, from those averages were computed.\n        precision: precision,\n        recall: recall,\n        fmeasure: fmeasure\n      }\n    };\n  }; // metrics()\n\n\n  if (!helpers.validate.isArray(classLabels)) {\n    throw Error('cross validate: class labels must be an array.');\n  }\n\n  if (classLabels.length < 2) {\n    throw Error('cross validate: at least 2 class labels are required.');\n  }\n\n  labels = classLabels;\n  labelCount = labels.length;\n  reset();\n  methods.reset = reset;\n  methods.evaluate = evaluate;\n  methods.metrics = metrics;\n  return methods;\n}; // cross()\n// ### Object Helpers\n\n\nhelpers.string = Object.create(null); // Regex for [diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) removal.\n\nvar rgxDiacritical = /[\\u0300-\\u036f]/g;\n/**\n *\n * Normalizes the token's value by converting it to lower case and stripping\n * the diacritical marks (if any).\n *\n * @param {string} str — that needs to be normalized.\n * @return {string} the normalized value.\n * @example\n * normalize( 'Nestlé' );\n * // -> nestle\n*/\n\nhelpers.string.normalize = function (str) {\n  return str.toLowerCase().normalize('NFD').replace(rgxDiacritical, '');\n}; // normalize()\n\n\nmodule.exports = helpers;","map":{"version":3,"names":["helpers","Object","create","productReducer","prev","curr","c","cmax","length","p","pmax","result","push","concat","array","isArray","v","undefined","prototype","toString","call","ascending","a","b","descending","ascendingOnKey","descendingOnKey","ascendingOnValue","descendingOnValue","ascendingOn","accessor1","accessor2","descendingOn","pluck","key","limit","k","plucked","i","lim","Array","product","reduce","shuffle","balance","candidate","temp","Math","floor","random","objectKeys","keys","objectCreate","object","isObject","obj","size","values","valueFreq","val","vf","table","f","pairs","ak","av","validate","isFiniteInteger","n","isNaN","isFinite","round","isFiniteNumber","cross","classLabels","unknown","evaluated","cm","precision","recall","fmeasure","labels","labelCount","labelsObj","methods","reset","row","j","col","evaluate","truth","guess","metrics","pd","rd","avgPrecision","avgRecall","avgFMeasure","toFixed","details","confusionMatrix","Error","string","rgxDiacritical","normalize","str","toLowerCase","replace","module","exports"],"sources":["D:/Getty-Search-Media-Results/node_modules/wink-helpers/src/wink-helpers.js"],"sourcesContent":["//     wink-helpers\n//     Functions for cross validation, shuffle, cartesian product and more\n//\n//     Copyright (C) 2017-18  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-helpers”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar helpers = Object.create( null );\n\n// ### Private Functions\n\n// #### Product Reducer (Callback)\n\n// Callback function used by `reduce` inside the `product()` function.\n// Follows the standard guidelines of `reduce()` callback function.\nvar productReducer = function ( prev, curr ) {\n  var c,\n      cmax = curr.length;\n  var p,\n      pmax = prev.length;\n  var result = [];\n\n  for ( p = 0; p < pmax; p += 1 ) {\n    for ( c = 0; c < cmax; c += 1 ) {\n      result.push( prev[ p ].concat( curr[ c ] ) );\n    }\n  }\n  return ( result );\n}; // productReducer()\n\n// ### Public Function\n\n// ### Array Helpers\n\nhelpers.array = Object.create( null);\n\n// #### is Array\n\n// Tests if argument `v` is a JS array; returns `true` if it is, otherwise returns `false`.\nhelpers.array.isArray = function ( v ) {\n  return ( ( v !== undefined ) && ( v !== null ) && ( Object.prototype.toString.call( v ) === '[object Array]' ) );\n}; // isArray()\n\n\n// #### sorting helpers\n\n// Set of helpers to sort either numbers or strings. For key/value pairs,\n// the format for each element must be `[ key, value ]`.\n// Sort helper to sort an array in ascending order.\nhelpers.array.ascending = function ( a, b ) {\n  return ( a > b ) ? 1 :\n            ( a === b ) ? 0 : -1;\n}; // ascending()\n\n// Sort helper to sort an array in descending order.\nhelpers.array.descending = function ( a, b ) {\n  return ( b > a ) ? 1 :\n            ( b === a ) ? 0 : -1;\n}; // descending()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **key**.\nhelpers.array.ascendingOnKey = function ( a, b ) {\n  return ( a[ 0 ] > b[ 0 ] ) ? 1 :\n            ( a[ 0 ] === b[ 0 ] ) ? 0 : -1;\n}; // ascendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **key**.\nhelpers.array.descendingOnKey = function ( a, b ) {\n  return ( b[ 0 ] > a[ 0 ] ) ? 1 :\n            ( b[ 0 ] === a[ 0 ] ) ? 0 : -1;\n}; // descendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **value**.\nhelpers.array.ascendingOnValue = function ( a, b ) {\n  return ( a[ 1 ] > b[ 1 ] ) ? 1 :\n            ( a[ 1 ] === b[ 1 ] ) ? 0 : -1;\n}; // ascendingOnValue()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **value**.\nhelpers.array.descendingOnValue = function ( a, b ) {\n  return ( b[ 1 ] > a[ 1 ] ) ? 1 :\n            ( b[ 1 ] === a[ 1 ] ) ? 0 : -1;\n}; // descendingOnValue()\n\n// The following two functions generate a suitable function for sorting on a single\n// key or on a composite keys (max 2 only). Just a remider, the generated function\n// does not sort on two keys; instead it will sort on a key composed of the two\n// accessors.\n// Sorts in ascending order on `accessor1` & `accessor2` (optional).\nhelpers.array.ascendingOn = function ( accessor1, accessor2 ) {\n  if ( accessor2 ) {\n    return ( function ( a, b ) {\n      return ( a[ accessor1 ][ accessor2 ] > b[ accessor1 ][ accessor2 ] ) ? 1 :\n              ( a[ accessor1 ][ accessor2 ] === b[ accessor1 ][ accessor2 ] ) ? 0 : -1;\n    } );\n  }\n  return ( function ( a, b ) {\n    return ( a[ accessor1 ] > b[ accessor1 ] ) ? 1 :\n            ( a[ accessor1 ] === b[ accessor1 ] ) ? 0 : -1;\n  } );\n}; // ascendingOn()\n\n// Sorts in descending order on `accessor1` & `accessor2` (optional).\nhelpers.array.descendingOn = function ( accessor1, accessor2 ) {\n  if ( accessor2 ) {\n    return ( function ( a, b ) {\n      return ( b[ accessor1 ][ accessor2 ] > a[ accessor1 ][ accessor2 ] ) ? 1 :\n              ( b[ accessor1 ][ accessor2 ] === a[ accessor1 ][ accessor2 ] ) ? 0 : -1;\n    } );\n  }\n  return ( function ( a, b ) {\n    return ( b[ accessor1 ] > a[ accessor1 ] ) ? 1 :\n            ( b[ accessor1 ] === a[ accessor1 ] ) ? 0 : -1;\n  } );\n}; // descendingOn()\n\n// #### pluck\n\n// Plucks specified element from each element of an **array of array**, and\n// returns the resultant array. The element is specified by `i` (default `0`) and\n// number of elements to pluck are defined by `limit` (default `a.length`).\nhelpers.array.pluck = function ( a, key, limit ) {\n  var k, plucked;\n  k = a.length;\n  var i = key || 0;\n  var lim = limit || k;\n  if ( lim > k ) lim = k;\n  plucked = new Array( lim );\n  for ( k = 0; k < lim; k += 1 ) plucked[ k ] = a[ k ][ i ];\n  return plucked;\n}; // pluck()\n\n// #### product\n\n// Finds the Cartesian Product of arrays present inside the array `a`. Therefore\n// the array `a` must be an array of 1-dimensional arrays. For example,\n// `product( [ [ 9, 8 ], [ 1, 2 ] ] )`\n// will produce `[ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]`.\nhelpers.array.product = function ( a ) {\n  return (\n    a.reduce( productReducer, [ [] ] )\n  );\n};\n\n// #### shuffle\n\n// Randomly shuffles the elements of an array and returns the same.\n// Reference: Chapter on Random Numbers/Shuffling in Seminumerical algorithms.\n// The Art of Computer Programming Volume II by Donald E Kunth\nhelpers.array.shuffle = function ( array ) {\n  var a = array;\n  var balance = a.length;\n  var candidate;\n  var temp;\n\n  while ( balance ) {\n    candidate = Math.floor( Math.random() * balance );\n    balance -= 1;\n\n    temp = a[ balance ];\n    a[ balance ] = a[ candidate ];\n    a[ candidate ] = temp;\n  }\n\n  return ( a );\n};\n\n\n// ### Object Helpers\n\nvar objectKeys = Object.keys;\nvar objectCreate = Object.create;\n\nhelpers.object = Object.create( null );\n\n// #### is Object\n\n// Tests if argument `v` is a JS object; returns `true` if it is, otherwise returns `false`.\nhelpers.object.isObject = function ( v ) {\n  return ( v && ( Object.prototype.toString.call( v ) === '[object Object]' ) ) ? true : false; // eslint-disable-line no-unneeded-ternary\n\n}; // isObject()\n\n// #### keys\n\n// Returns keys of the `obj` in an array.\nhelpers.object.keys = function ( obj ) {\n  return ( objectKeys( obj ) );\n}; // keys()\n\n// #### size\n\n// Returns the number of keys of the `obj`.\nhelpers.object.size = function ( obj ) {\n  return ( ( objectKeys( obj ) ).length );\n}; // size()\n\n// #### values\n\n// Returns all values from each key/value pair of the `obj` in an array.\nhelpers.object.values = function ( obj ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var values = new Array( length );\n  for ( var i = 0; i < length; i += 1 ) {\n    values[ i ] = obj[ keys[ i ] ];\n  }\n  return values;\n}; // values()\n\n// #### value Freq\n\n// Returns the frequency of each unique value present in the `obj`, where the\n// **key** is the *value* and **value** is the *frequency*.\nhelpers.object.valueFreq = function ( obj ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var val;\n  var vf = objectCreate( null );\n  for ( var i = 0; i < length; i += 1 ) {\n    val = obj[ keys[ i ] ];\n    vf[ val ] = 1 + ( vf[ val ] || 0 );\n  }\n  return vf;\n}; // valueFreq()\n\n// #### table\n\n// Converts the `obj` in to an array of `[ key, value ]` pairs in form of a table.\n// Second argument - `f` is optional and it is a function, which is called with\n// each `value`.\nhelpers.object.table = function ( obj, f ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var pairs = new Array( length );\n  var ak, av;\n  for ( var i = 0; i < length; i += 1 ) {\n    ak = keys[ i ];\n    av = obj[ ak ];\n    if ( typeof f === 'function' ) f( av );\n    pairs[ i ] = [ ak, av ];\n  }\n  return pairs;\n}; // table()\n\n// ### Validation Helpers\n\nhelpers.validate = Object.create( null );\n\n// Create aliases for isObject and isArray.\nhelpers.validate.isObject = helpers.object.isObject;\nhelpers.validate.isArray = helpers.array.isArray;\n\n// #### isFiniteInteger\n\n// Validates if `n` is a finite integer.\nhelpers.validate.isFiniteInteger = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n ) &&\n    ( n === Math.round( n ) )\n  );\n}; // isFiniteInteger()\n\n// #### isFiniteNumber\n\n// Validates if `n` is a valid number.\nhelpers.validate.isFiniteNumber = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n )\n  );\n}; // isFiniteNumber()\n\n// ### cross validation\n/**\n *\n * Creates an instance of cross validator useful for machine learning tasks.\n *\n * @param {string[]} classLabels - array containing all the class labels.\n * @return {methods} object conatining set of API methods for tasks like evalutaion,\n * reset and metrics generation.\n*/\nhelpers.validate.cross = function ( classLabels ) {\n  // wink's const for unknown predictions!\n  const unknown = 'unknown';\n  // To ensure that metrics is not computed prior to evaluation.\n  var evaluated = false;\n  // The confusion matrix.\n  var cm;\n  var precision;\n  var recall;\n  var fmeasure;\n\n  // The class labels is assigned to this variable.\n  var labels;\n  // The length of `labels` array.\n  var labelCount;\n  var labelsObj = Object.create( null );\n\n  // Returned!\n  var methods = Object.create( null );\n\n\n  /**\n   *\n   * Resets the current instance for another round of evaluation; the class\n   * labels defined at instance creation time are not touched.\n   *\n   * @return {undefined} nothing!\n  */\n  var reset = function ( ) {\n    evaluated = false;\n    cm = Object.create( null );\n    precision = Object.create( null );\n    recall = Object.create( null );\n    fmeasure = Object.create( null );\n\n    // Initialize confusion matrix and metrics.\n    for ( let i = 0; i < labelCount; i += 1 ) {\n      const row = labels[ i ];\n      labelsObj[ row ] = true;\n      cm[ row ] = Object.create( null );\n      precision[ row ] = 0;\n      recall[ row ] = 0;\n      fmeasure[ row ] = 0;\n      for ( let j = 0; j < labelCount; j += 1 ) {\n        const col = labels[ j ];\n        cm[ row ][ col ] = 0;\n      }\n    }\n  }; // reset()\n\n  /**\n   *\n   * Creates an instance of cross validator useful for machine learning tasks.\n   *\n   * @param {string} truth - the actual class label.\n   * @param {string} guess - the predicted class label.\n   * @return {boolean} returns true if the evaluation is successful. The evaluation\n   * may fail if `truth` or `guess` is not in the array `classLabels` provided at\n   * instance creation time; or if guess is equal to `unknown`.\n  */\n  var evaluate = function ( truth, guess ) {\n    // If prediction failed then return false!\n    if ( guess === unknown || !labelsObj[ truth ] || !labelsObj[ guess ] ) return false;\n    // Update confusion matrix.\n    if ( guess === truth ) {\n      cm[ truth ][ guess ] += 1;\n    } else {\n      cm[ guess ][ truth ] += 1;\n    }\n    evaluated = true;\n    return true;\n  }; // evaluate()\n\n  /**\n   *\n   * It computes a detailed metrics consisting of macro-averaged precision,\n   * recall and f-measure along with their label-wise values and the confusion\n   * matrix.\n   *\n   * @return {object} object containing macro-averaged `avgPrecision`, `avgRecall`,\n   * `avgFMeasure` values along with other details such as label-wise values\n   * and the confusion matrix. A value of `null` is returned if no evaluate()\n   * has been called before.\n  */\n  var metrics = function ( ) {\n    if ( !evaluated ) return null;\n    // Numerators for every label; they are same for precision & recall both.\n    var n = Object.create( null );\n    // Only denominators differs for precision & recall\n    var pd = Object.create( null );\n    var rd = Object.create( null );\n    // `row` and `col` of confusion matrix.\n    var col, row;\n    var i, j;\n    // Macro average values for metrics.\n    var avgPrecision = 0;\n    var avgRecall = 0;\n    var avgFMeasure = 0;\n\n    // Compute label-wise numerators & denominators!\n    for ( i = 0; i < labelCount; i += 1 ) {\n      row = labels[ i ];\n      for ( j = 0; j < labelCount; j += 1 ) {\n        col = labels[ j ];\n        if ( row === col ) {\n          n[ row ] = cm[ row ][ col ];\n        }\n        pd[ row ] = cm[ row ][ col ] + ( pd[ row ] || 0 );\n        rd[ row ] = cm[ col ][ row ] + ( rd[ row ] || 0 );\n      }\n    }\n    // Ready to compute metrics.\n    for ( i = 0; i < labelCount; i += 1 ) {\n      row = labels[ i ];\n      precision[ row ] = +( n[ row ] / pd[ row ] ).toFixed( 4 );\n      // NaN can occur if a label has not been encountered.\n      if ( isNaN( precision[ row ] ) ) precision[ row ] = 0;\n\n      recall[ row ] = +( n[ row ] / rd[ row ] ).toFixed( 4 );\n      if ( isNaN( recall[ row ] ) ) recall[ row ] = 0;\n\n      fmeasure[ row ] = +( 2 * precision[ row ] * recall[ row ] / ( precision[ row ] + recall[ row ] ) ).toFixed( 4 );\n      if ( isNaN( fmeasure[ row ] ) ) fmeasure[ row ] = 0;\n    }\n    // Compute thier averages, note they will be macro avegages.\n    for ( i = 0; i < labelCount; i += 1 ) {\n      avgPrecision += ( precision[ labels[ i ] ] / labelCount );\n      avgRecall += ( recall[ labels[ i ] ] / labelCount );\n      avgFMeasure += ( fmeasure[ labels[ i ] ] / labelCount );\n    }\n    // Return metrics.\n    return (\n      {\n        // Macro-averaged metrics.\n        avgPrecision: +avgPrecision.toFixed( 4 ),\n        avgRecall: +avgRecall.toFixed( 4 ),\n        avgFMeasure: +avgFMeasure.toFixed( 4 ),\n        details: {\n          // Confusion Matrix.\n          confusionMatrix: cm,\n          // Label wise metrics details, from those averages were computed.\n          precision: precision,\n          recall: recall,\n          fmeasure: fmeasure\n        }\n      }\n    );\n  }; // metrics()\n\n  if ( !helpers.validate.isArray( classLabels ) ) {\n    throw Error( 'cross validate: class labels must be an array.' );\n  }\n  if ( classLabels.length < 2 ) {\n    throw Error( 'cross validate: at least 2 class labels are required.' );\n  }\n  labels = classLabels;\n  labelCount = labels.length;\n\n  reset();\n\n  methods.reset = reset;\n  methods.evaluate = evaluate;\n  methods.metrics = metrics;\n\n  return methods;\n}; // cross()\n\n// ### Object Helpers\n\nhelpers.string = Object.create( null );\n\n// Regex for [diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) removal.\nvar rgxDiacritical = /[\\u0300-\\u036f]/g;\n\n/**\n *\n * Normalizes the token's value by converting it to lower case and stripping\n * the diacritical marks (if any).\n *\n * @param {string} str — that needs to be normalized.\n * @return {string} the normalized value.\n * @example\n * normalize( 'Nestlé' );\n * // -> nestle\n*/\nhelpers.string.normalize = function ( str ) {\n  return (\n    str.toLowerCase().normalize( 'NFD' ).replace( rgxDiacritical, '' )\n  );\n}; // normalize()\n\nmodule.exports = helpers;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}