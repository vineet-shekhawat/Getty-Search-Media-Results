[{"D:\\Getty-Search-Media-Results\\src\\index.js":"1","D:\\Getty-Search-Media-Results\\src\\App.js":"2","D:\\Getty-Search-Media-Results\\src\\components\\FilterComponent.jsx":"3","D:\\Getty-Search-Media-Results\\src\\components\\constants.js":"4"},{"size":265,"mtime":1663953450000,"results":"5","hashOfConfig":"6"},{"size":217,"mtime":1663953450000,"results":"7","hashOfConfig":"6"},{"size":10467,"mtime":1667335030107,"results":"8","hashOfConfig":"6"},{"size":119,"mtime":1679003541373,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"lwfjh8",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Getty-Search-Media-Results\\src\\index.js",[],["20","21"],"D:\\Getty-Search-Media-Results\\src\\App.js",[],"D:\\Getty-Search-Media-Results\\src\\components\\FilterComponent.jsx",["22"],"import React, { useState } from \"react\";\r\nimport {gettyApiKey, gettyApiSecret, keywordForImagesWithText} from './constants';\r\nimport Gallery from 'react-photo-gallery';\r\nconst api = require(\"@vineetshekhawat/gettyimages-api\");\r\nvar posTagger = require( 'wink-pos-tagger' );\r\n\r\nfunction FilterComponent() {\r\n\r\n    const [data, setData]  = useState([]);\r\n    const [taggers,SetTaggers] = useState(false);\r\n    const [searchTerm,setSearchTerm] = useState(\"\");\r\n    const [style,setStyle] = useState(\"\");\r\n    const [textCheckBox, setTextCheckBox] = useState(false);\r\n    const [mediaCount, setMediaCount] = useState(5);\r\n    const [videoCheckBox, setVideoCheckBox] = useState(false);\r\n    const [photoList, setPhotoList] = useState([]);\r\n    const [detailCheckBox, setDetailCheckbox] = useState(false);\r\n\r\n    function avoidTextCheckBoxStatus() {\r\n        // Get the checkbox\r\n        var checkBox = document.getElementById(\"textCheckBox\");\r\n        // If the checkbox is checked, update state\r\n        if (checkBox.checked === true){\r\n            setTextCheckBox(true);\r\n        } else {\r\n            setTextCheckBox(false);\r\n        }\r\n    }\r\n\r\n    const enterPressed = () => {\r\n        console.log('pressed Enter âœ…');\r\n        document.getElementById('SearchButton').click();\r\n      };\r\n\r\n    React.useEffect(() => {\r\n        const keyDownHandler = event => {    \r\n          if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            enterPressed();\r\n          }\r\n        };\r\n        document.addEventListener('keydown', keyDownHandler);  \r\n        return () => {\r\n          document.removeEventListener('keydown', keyDownHandler);\r\n        };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []);\r\n\r\n    function detailCheckBoxStatus() {\r\n        // Get the checkbox\r\n        var checkBox = document.getElementById(\"detailCheckBox\");\r\n        // If the checkbox is checked, update state\r\n        if (checkBox.checked === true){\r\n            setDetailCheckbox(true);\r\n        } else {\r\n            setDetailCheckbox(false);\r\n        }\r\n    }\r\n\r\n    function filteredQuery() {\r\n        // Get the checkbox\r\n        var checkBox = document.getElementById(\"filterQuery\");\r\n        // If the checkbox is checked, update state\r\n        if (checkBox.checked === true){\r\n            SetTaggers(true);\r\n        } else {\r\n            SetTaggers(false);\r\n        }\r\n    }\r\n\r\n    function videoResultsCheckBoxStatus() {\r\n        // Get the checkbox\r\n        var checkBox = document.getElementById(\"videoCheckBox\");\r\n        // If the checkbox is checked, update state\r\n        if (checkBox.checked === true){\r\n            setData([]);\r\n            setPhotoList([]);\r\n            document.getElementById('graphicStyle').disabled = true;\r\n            document.getElementById('textCheckBox').disabled = true;\r\n            document.getElementById('detailCheckBox').disabled = true;\r\n            setDetailCheckbox(true);\r\n            setVideoCheckBox(true);\r\n        } else {\r\n            setPhotoList([]);\r\n            setData([]);\r\n            document.getElementById('graphicStyle').disabled = false;\r\n            document.getElementById('textCheckBox').disabled = false;\r\n            document.getElementById('detailCheckBox').disabled = false;\r\n            document.getElementById('detailCheckBox').checked = false; // always start with photo gallery\r\n            setVideoCheckBox(false);\r\n            setDetailCheckbox(false);\r\n        }\r\n    }\r\n\r\n    async function FetchGettyImages() {\r\n        var creds = { apiKey: gettyApiKey, apiSecret: gettyApiSecret };\r\n        var client = new api(creds);\r\n        document.getElementById(\"SearchButton\").disabled = true;\r\n        document.getElementById(\"videoCheckBox\").disabled = true;\r\n\r\n        if(searchTerm === \"\")\r\n        {\r\n            setPhotoList([]);\r\n            setData([]);\r\n            console.log(\"empty string- nothing available\");\r\n            document.getElementById(\"SearchButton\").disabled = false;\r\n            return;\r\n        }\r\n\r\n        //FetchQueryFromSearchTerm(); //national cookie day\r\n        var sq = \"\";\r\n        if(taggers)\r\n        {\r\n            var tagger = posTagger();\r\n            var tokens = tagger.tagSentence( searchTerm );\r\n            tokens = tokens.filter((token) => token.tag === \"word\");\r\n            tokens.map((token) => {\r\n                if ([\"NN\", \"NNS\", \"NNP\", \"NNPS\"].includes(token.pos)) { //, \"JJ\", \"JJR\", \"JJS\"\r\n                    if(sq === \"\") sq = token.value;\r\n                    else sq = sq.concat(\" \",token.value);\r\n                    return sq;\r\n                }\r\n            });\r\n        }\r\n\r\n        const query = sq ===\"\" ? searchTerm : sq;\r\n        //console.log('search term: '+ searchTerm, \"post processing: \", query);\r\n\r\n        if(videoCheckBox)\r\n        {\r\n            var searchVideosQuery = client.searchvideos().withPage(1).withPageSize(mediaCount); // add count of images\r\n            searchVideosQuery.withPhrase(query); // add search term\r\n            const searchResponse = await searchVideosQuery.execute(); //fetch response\r\n            setData(searchResponse.videos);\r\n            console.log(\"response video\", searchResponse.videos);\r\n            document.getElementById(\"SearchButton\").disabled = false;\r\n            document.getElementById(\"videoCheckBox\").disabled = false;\r\n            return;\r\n        }\r\n\r\n        var searchQuery = client.searchimagescreative().withPage(1).withPageSize(mediaCount); // add count of images\r\n        if(textCheckBox) searchQuery.withExcludeKeywordId(keywordForImagesWithText); // exclude images with text\r\n        if(style !== \"\" && style !== \"all\") searchQuery.withGraphicalStyle(style); // add graphic style if any\r\n        searchQuery.withSafeSearch(true).withPhrase(query).withSortOrder(\"best_match\"); // add search term\r\n        const searchResponse = await searchQuery.execute(); //fetch response\r\n        setData(searchResponse.images);\r\n        document.getElementById(\"SearchButton\").disabled = false;\r\n        document.getElementById(\"videoCheckBox\").disabled = false;\r\n        console.log(\"response images\", searchResponse.images);\r\n        const newPhotoList = [];\r\n        for(let item of searchResponse.images )\r\n        {\r\n            const imgObj = {\r\n                src: item.display_sizes[0].uri ?? '',\r\n                width: item.max_dimensions.width,\r\n                height: item.max_dimensions.height\r\n            };\r\n            newPhotoList.push(imgObj);\r\n        }\r\n        setPhotoList(newPhotoList);\r\n    }       \r\n    return <>\r\n        <div className=\"title\">\r\n            <h1 className=\"heading\">Search Getty Images</h1>\r\n        </div>\r\n        <div className=\"body\">\r\n            <div>\r\n                <input style= {{marginRight: '10px'}} type=\"text\" name=\"textfield\" id=\"textfield\" placeholder=\"Search media for text...\" onChange={(e)=> setSearchTerm(e.target.value)} />\r\n                <select style= {{marginRight: '10px'}} id=\"graphicStyle\" onChange={(e)=> setStyle(e.target.value)}>\r\n                    <option value=\"all\">all styles</option>\r\n                    <option value=\"photography\">photography</option>\r\n                    <option value=\"illustration\">illustration</option>\r\n                    <option value=\"vector\">vector</option>\r\n                </select>\r\n                <input style= {{marginRight: '10px', width: '25px'}} type=\"text\" name=\"textfield\" id=\"textfield\" placeholder=\"5\" onChange={(e)=> setMediaCount(e.target.value)} />\r\n                <input style= {{marginRight: '10px'}} name=\"\" type=\"button\" id= \"SearchButton\" value=\"Search\" onClick={()=> FetchGettyImages()}></input>\r\n                <input type=\"checkbox\" id=\"textCheckBox\" onClick={()=>avoidTextCheckBoxStatus()}/>\r\n                <label style= {{marginRight: '20px'}} id=\"textCheckBox\"> Without text</label>\r\n                <input type=\"checkbox\" id=\"videoCheckBox\" onClick={()=>videoResultsCheckBoxStatus()}/>\r\n                <label style= {{marginRight: '20px'}} id=\"videoCheckBox\"> Videos </label>\r\n                <input type=\"checkbox\" id=\"detailCheckBox\" onClick={()=>detailCheckBoxStatus()}/>\r\n                <label style= {{marginRight: '20px'}} id=\"detailCheckBox\"> Show Details</label>\r\n                <input type=\"checkbox\" id=\"filterQuery\" onClick={()=>filteredQuery()}/>\r\n                <label id=\"filterQuery\"> Query Processor</label>\r\n            </div>\r\n            <h2>List of Media</h2>\r\n            <span>For best Results From Getty API: Use style as Photography and Without Text</span>\r\n            { !detailCheckBox && <div id=\"gallery\">\r\n                <br></br>\r\n                <br></br>\r\n                <Gallery photos={photoList} />\r\n            </div> }\r\n            { detailCheckBox && <ul className=\"items-unorder\">\r\n                {data\r\n                    // .filter((data) => data.title.toLowerCase().includes(input))\r\n                    .map((items)=> {\r\n                    return (\r\n                        <>  \r\n                            <li className=\"items-list\" key={items.id}>\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-content\">\r\n                                        <h3>{items.id}</h3>\r\n                                        {\r\n                                            videoCheckBox\r\n                                            ?   <video width=\"200px\" height= \"175px\" controls=\"controls\" transform= \"translate(-50%)\">\r\n                                                    <source src= {items.display_sizes[0].uri} type=\"video/mp4\"/>\r\n                                                </video>\r\n                                            :   <img src={ items.display_sizes[0].uri } alt={'hi'} width=\"200px\" height=\"175px\"></img>\r\n                                        }\r\n                                        <span className=\"sub-title\">\r\n                                            <a  target=\"_blank\" rel=\"noopener noreferrer\" href={items.display_sizes[0].uri}>MediaLink</a>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"edge-right\"></div>\r\n                                </div>\r\n                            </li>  \r\n                        </>\r\n                    )\r\n                })}\r\n            </ul> \r\n            }\r\n        </div>\r\n    </>\r\n}\r\nexport default FilterComponent;","D:\\Getty-Search-Media-Results\\src\\components\\constants.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":117,"column":32,"nodeType":"29","messageId":"30","endLine":117,"endColumn":34},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]